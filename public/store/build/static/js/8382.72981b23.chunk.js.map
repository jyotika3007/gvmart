{"version":3,"file":"static/js/8382.72981b23.chunk.js","mappings":"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","sources":["components/Loading/Loading.js","helpers/utils.js","webpack://flone-react/./src/pages/other/LoginRegister.module.css?0730","webpack://flone-react/./src/components/otpModal/Otpbox.module.css?961b","components/otpModal/otpModal.js","pages/other/LoginRegister.js"],"sourcesContent":["import React from 'react'\r\nimport \"./Loading.scss\"\r\n\r\nconst Loading = () => {\r\n  return (\r\n        <div className='Loading-container'>\r\n        <div className=\"lds-ellipsis\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n           </div>\r\n        </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Loading","import { toast } from \"react-toastify\";\r\n\r\nexport function isNumber(evt) {\r\n  const charCode = evt.which ? evt.which : evt.keyCode;\r\n  if (\r\n    (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 190) ||\r\n    evt.shiftKey\r\n  ) {\r\n    evt.preventDefault();\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function Showtoast(msg) {\r\n  toast.error(`${msg}`, {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n}\r\n\r\nexport function filter(array, FilterWord1, FilterWord2, FilterWord3) {\r\n  console.log(\"filter\", FilterWord1, FilterWord2, FilterWord3);\r\n  if (FilterWord1 === \"\" && FilterWord2 === \"\" && FilterWord3 === \"\") {\r\n    return array;\r\n  }\r\n\r\n  let filteredArray1 = [],\r\n    filteredArray2 = [],\r\n    filteredArray3 = [];\r\n  if (FilterWord1 !== \"\") {\r\n    filteredArray1 = Array.isArray(array)\r\n      ? array?.filter((item) => {\r\n          return (\r\n            (item?.application_status?.toLowerCase() ||\r\n              item?.transaction_status?.toLowerCase() ||\r\n              item?.status) === FilterWord1?.toLowerCase()\r\n          );\r\n        })\r\n      : [];\r\n  }\r\n\r\n  if (FilterWord2 !== \"\") {\r\n    filteredArray2 = array?.filter((item) => {\r\n      return (\r\n        (item?.application_status?.toLowerCase() ||\r\n          item?.transaction_status?.toLowerCase() ||\r\n          item?.status) === FilterWord2?.toLowerCase()\r\n      );\r\n    });\r\n  }\r\n\r\n  if (FilterWord3 !== \"\") {\r\n    filteredArray3 = array?.filter((item) => {\r\n      return (\r\n        (item?.application_status?.toLowerCase() ||\r\n          item?.transaction_status?.toLowerCase() ||\r\n          item?.status) === FilterWord3?.toLowerCase()\r\n      );\r\n    });\r\n  }\r\n\r\n  const finalData = [...filteredArray1, ...filteredArray2, ...filteredArray3];\r\n\r\n  return finalData;\r\n}\r\n\r\nexport function isText(evt) {\r\n  if (/^[a-zA-Z ]{0,102}$/.test(evt.target.value)) {\r\n    return true;\r\n  } else {\r\n    evt.preventDefault();\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isValidPhone(evt) {\r\n  if (/^[0-9]{0,10}$/.test(evt.target.value)) {\r\n    return true;\r\n  } else {\r\n    evt.preventDefault();\r\n    return false;\r\n  }\r\n}\r\n\r\nexport const emailValidation = (email) => {\r\n  let re =\r\n    /^(?=[^@]*[A-Za-z])([a-zA-Z0-9])(([a-zA-Z0-9])*([\\.-_+])?([a-zA-Z0-9]))*@(([a-zA-Z0-9\\-])+(\\.))+([a-zA-Z]{2,3})+$/i;\r\n  return re.test(String(email).toLowerCase());\r\n};\r\n\r\nexport const passwordValidation = (password) => {\r\n  return /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).{8,}/.test(\r\n    password\r\n  );\r\n};\r\n\r\nexport const passMatchWithCPass = (pass, cpass) => {\r\n  if (pass.length === cpass.length && pass === cpass) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport const truncateString = (str, num) => {\r\n  if (str.length > num) {\r\n    return str.slice(0, num) + \"...\";\r\n  } else {\r\n    return str;\r\n  }\r\n};\r\n\r\nexport const internationalCurrencySystemConversion = (evt) => {\r\n  const x = evt.target.value.toString();\r\n  const pattern = /(-?\\d+)(\\d{3})/;\r\n  while (pattern.test(x)) x = x.replace(pattern, \"$1,$2\");\r\n  return x;\r\n};\r\n\r\nexport const getHumanReadableDate = (timeStamp) => {\r\n  const date = new Date(timeStamp);\r\n  return (\r\n    date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear()\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"firstName_div\":\"LoginRegister_firstName_div__CTlII\",\"buttonDiv\":\"LoginRegister_buttonDiv__Ir5Ds\",\"loginbuttonDiv\":\"LoginRegister_loginbuttonDiv__9bn6R\",\"register_input_field\":\"LoginRegister_register_input_field__Zo3sM\",\"inputContainer\":\"LoginRegister_inputContainer__XEeQM\",\"RegistermainContainer\":\"LoginRegister_RegistermainContainer__4woPF\",\"headingContainer\":\"LoginRegister_headingContainer__D9aXL\",\"selectedSpan\":\"LoginRegister_selectedSpan__r-CBw\",\"forgotText\":\"LoginRegister_forgotText__EeEvv\",\"forgotTextContainer\":\"LoginRegister_forgotTextContainer__JNvHH\"};","// extracted by mini-css-extract-plugin\nexport default {\"otpVerifyHeading\":\"Otpbox_otpVerifyHeading__Fn3F1\",\"loginbuttonDiv\":\"Otpbox_loginbuttonDiv__WWQS4\",\"Resend\":\"Otpbox_Resend__2zO7B\",\"resendTextDiv\":\"Otpbox_resendTextDiv__qm0zo\"};","import React,{useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport OtpInput from 'react-otp-input';\r\nimport styles from \"./Otpbox.module.css\"\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { number } from 'prop-types';\r\nconst inputStyle = {\r\n  // border: \"1px solid #BDBDBD\",\r\n  borderRadius: \"8px\",\r\n  width: \"60px\",\r\n  height: \"70px\",\r\n  margin: \"0px 5px\",\r\n  marginTop:\"20px\"\r\n};\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '40%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 500,\r\n  bgcolor: 'background.paper',\r\n  // border: '2px solid #000',\r\n  borderRadius:4,\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function OtpModal({open,setOpen,handleButtonClick,setotpValue, otpValue}) {\r\n  const handleClose = () => setOpen(false);\r\n  const [otp, setOtp] = useState('');\r\n  \r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n      <div className={styles.otpVerifyHeading}><h3>Verify OTP</h3></div>\r\n     <div style={{marginTop:\"20px\"}}>\r\n      <OtpInput\r\n      value={otpValue}\r\n      onChange={setotpValue}\r\n      numInputs={6}\r\n      renderSeparator={<span>-</span>}\r\n      inputType=\"tel\"\r\n      renderInput={(props) => <input {...props} />}\r\n    />\r\n    </div>\r\n<div className={styles.resendTextDiv}><h5>Didn't get OTP ?</h5>   <h5 className={styles.Resend}>Resend</h5> </div> \r\n<div className={styles.loginbuttonDiv}><Button variant=\"contained\" onClick={()=>handleButtonClick()}  style={{backgroundColor: \"#6364BF\",}}>Verify</Button></div> \r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React, { Fragment,useState ,useCallback} from \"react\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport { ForgetPasswordAction, LoginAction, OtpVerifyAction, RegisterAction } from \"../../store/slices/authSlice/authSlice\";\r\nimport { TextField, Button} from \"@mui/material\";\r\nimport { useDispatch , useSelector} from \"react-redux\";\r\nimport { passMatchWithCPass,emailValidation } from \"../../helpers/utils\";\r\nimport style from \"./LoginRegister.module.css\"\r\nimport OtpModal from \"../../components/otpModal/otpModal\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Loading from \"../../components/Loading/Loading\";\r\nconst LoginRegister = ({navigation}) => {\r\n  const dispatch = useDispatch()\r\n  const [ConfirmPass, setConfirmPass] = useState(\"\");\r\n  const [error, seterror] = useState(true)\r\n  const [open,setOpen] = useState(false)\r\n  const [tabSelected,settabSelected] = useState(\"Login\")\r\n  const [otpValue,setOtpValue]=useState(\"\")\r\n  const authReducer = useSelector((state) => state.authReducer)\r\n  const [forgetmail,setforgetmail]=useState(\"\")\r\n  const [forgetmailError,setforgetmailError]=useState(\"\")\r\n  const [errorMsg, seterrorMsg] = useState({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    password:\"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const purpose = location.state?.purpose;\r\n  const product = location.state?.product;\r\n\r\n  const [register, setregister] = useState({\r\n    name: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n    password:\"\",\r\n    cpassword:\"\"\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    seterror(false);\r\n    seterrorMsg({\r\n      name: \"\",\r\n      mobile: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n    const errors = {};\r\n    if (register.name.trim() === \"\") {\r\n      errors.name = \"Please Enter Name\";\r\n    }\r\n    if (register.email.trim() === \"\") {\r\n      errors.email = \"Please Enter Email\";\r\n    } else if (!emailValidation(register.email)) {\r\n      errors.email = \"Please Enter a valid Email\";\r\n    }\r\n  \r\n    if (register.password.trim() === \"\") {\r\n      errors.password = \"Please Enter Password\";\r\n    }\r\n  \r\n    if (passMatchWithCPass(register.password, register.cpassword) === false) {\r\n      errors.confirmPassword = \"Password is not Matching\";\r\n    }\r\n  \r\n    if (Object.keys(errors).length > 0) {\r\n      seterror(true);\r\n      seterrorMsg({ ...errorMsg, ...errors });\r\n      return;\r\n    }\r\n      const { cpassword, ...finalRegister } = register;\r\n    dispatch(RegisterAction(finalRegister,setOpen));\r\n  };\r\n  \r\n  const ResetRegisterStates = ()=> {\r\n     setregister({\r\n     name: \"\",\r\n     mobile: \"\",\r\n     email: \"\",\r\n     password:\"\",\r\n     cpassword:\"\"\r\n})\r\n  }\r\n  \r\n  const handleLoginSubmit= (e) => {\r\n    seterror(false);\r\n    seterrorMsg({\r\n      name: \"\",\r\n      mobile: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      forgetmail:\"\"\r\n    });\r\n    const errors = {};\r\n    if (register.email.trim() === \"\") {\r\n      errors.email = \"Please Enter Email\";\r\n    } else if (!emailValidation(register.email)) {\r\n      errors.email = \"Please Enter a valid Email\";\r\n    }\r\n    if (register.password.trim() === \"\") {\r\n      errors.password = \"Please Enter Password\";\r\n    }\r\n     if (Object.keys(errors).length > 0) {\r\n      seterror(true);\r\n      seterrorMsg({ ...errorMsg, ...errors });\r\n      return;\r\n    }\r\n    const { cpassword,mobile,name, ...finalRegister } = register;\r\n\r\n    if(purpose && product){\r\n      dispatch(LoginAction(finalRegister,navigate,purpose,product,dispatch));\r\n    }else{\r\n      dispatch(LoginAction(finalRegister,navigate));\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const handleChange = (name, value) => {\r\n    seterror(false);\r\n    seterrorMsg({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    });\r\n    setregister({ ...register, [name]: value });\r\n  };\r\n\r\n  const OtpVerify = () => {\r\n      let data={\r\n        \"email\": register?.email,\r\n        \"otp\": otpValue\r\n      }\r\n      dispatch(OtpVerifyAction(data,setOpen,settabSelected,ResetRegisterStates))\r\n  };\r\n  \r\n  const ForgetPassword = () => {\r\n    let data={\r\n      \"email\": forgetmail,\r\n    }\r\n    setforgetmailError(\"\")\r\n    if (forgetmail.trim() === \"\") {\r\n      setforgetmailError(\"Please Enter Email\")\r\n      return\r\n    }\r\n    dispatch(ForgetPasswordAction(data))\r\n};\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Login\"\r\n        description=\"Login page of I-Advance Appple Ecommerce.\"\r\n      />\r\n      <LayoutOne headerTop=\"visible\">\r\n      <div className={style.headingContainer}>\r\n           <span className={tabSelected==\"Register\"? style.selectedSpan:\"\"} onClick={()=>settabSelected(\"Register\")} >Register</span>\r\n           <span>|</span>\r\n           <span className={tabSelected==\"Login\"? style.selectedSpan:\"\"} onClick={()=>settabSelected(\"Login\")} >Login</span>\r\n          </div>\r\n        <div className={style.RegistermainContainer}>    \r\n             {tabSelected ==\"Register\" ? \r\n             <div className={style.inputContainer}>\r\n       \r\n      <div className={style.firstName_div}>\r\n                <TextField\r\n                  error={errorMsg?.name}\r\n                  FormHelperTextProps={{\r\n                    style: {\r\n                      backgroundColor: \"#fff\",\r\n                      margin: \"0px 0px\",\r\n                      paddingTop: \"4px\",\r\n                    },\r\n                  }}\r\n                  helperText={errorMsg?.name}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className={style.register_input_field}\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  value={register.name}\r\n                 \r\n                />\r\n              </div>\r\n\r\n              <div className={style.firstName_div}>\r\n                <TextField\r\n                  type=\"text\"\r\n                  FormHelperTextProps={{\r\n                    style: {\r\n                      backgroundColor: \"#fff\",\r\n                      margin: \"0px 0px\",\r\n                      paddingTop: \"4px\",\r\n                    },\r\n                  }}\r\n                  className={style.register_input_field}\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  name=\"email\"\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  error={errorMsg?.email}\r\n                  helperText={errorMsg?.email}\r\n                  value={register.email}\r\n                />\r\n              </div>\r\n\r\n              <div className={style.firstName_div}>\r\n                <TextField\r\n                  FormHelperTextProps={{\r\n                    style: {\r\n                      backgroundColor: \"#fff\",\r\n                      margin: \"0px 0px\",\r\n                      paddingTop: \"4px\",\r\n                    },\r\n                  }}\r\n                  id=\"outlined-basic\"\r\n                  label=\"Phone\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  className={style.register_input_field}\r\n                  placeholder=\"Phone\"\r\n                  name=\"mobile\"\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                  value={register.mobile}\r\n                />\r\n              </div>\r\n\r\n              <div className={style.firstName_div}>\r\n                <TextField\r\n                  error={errorMsg?.password}\r\n                  FormHelperTextProps={{\r\n                    style: {\r\n                      backgroundColor: \"#fff\",\r\n                      margin: \"0px 0px\",\r\n                      paddingTop: \"4px\",\r\n                    },\r\n                  }}\r\n                  helperText={errorMsg?.password}\r\n                  required\r\n                  id=\"outlined-basic\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={register?.password}\r\n                  className={style.register_input_field}\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={style.firstName_div}>\r\n                <TextField\r\n                  error={errorMsg?.confirmPassword}\r\n                  FormHelperTextProps={{\r\n                    style: {\r\n                      backgroundColor: \"#fff\",\r\n                      margin: \"0px 0px\",\r\n                      paddingTop: \"4px\",\r\n                    },\r\n                  }}\r\n                  helperText={errorMsg?.confirmPassword}\r\n                  required\r\n                  id=\"outlined-basic\"\r\n                  label=\"Confirm Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  className={style.register_input_field}\r\n                  placeholder=\"Confirm Password\"\r\n                  value={register?.cpassword}\r\n                  name=\"cpassword\"\r\n                  onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={style.buttonDiv}><Button variant=\"contained\" onClick={()=>handleSubmit()}  style={{backgroundColor: \"#6364BF\",}}>Register</Button></div> \r\n              </div>\r\n                :tabSelected ==\"Login\" ? \r\n                <div className={style.inputContainer}>\r\n                  <div></div>\r\n                        <div className={style.firstName_div}>\r\n                          <TextField\r\n                            type=\"text\"\r\n                            FormHelperTextProps={{\r\n                              style: {\r\n                                backgroundColor: \"#fff\",\r\n                                margin: \"0px 0px\",\r\n                                paddingTop: \"4px\",\r\n                              },\r\n                            }}\r\n                            className={style.register_input_field}\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            name=\"email\"\r\n                            onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            value={register?.email}\r\n                            variant=\"outlined\"\r\n                            error={errorMsg?.email}\r\n                            helperText={errorMsg?.email}\r\n                          />\r\n                        </div>\r\n                        <div className={style.firstName_div}>\r\n                          <TextField\r\n                            error={errorMsg?.password}\r\n                            FormHelperTextProps={{\r\n                              style: {\r\n                                backgroundColor: \"#fff\",\r\n                                margin: \"0px 0px\",\r\n                                paddingTop: \"4px\",\r\n                              },\r\n                            }}\r\n                            helperText={errorMsg?.password}\r\n                            required\r\n                            id=\"outlined-basic\"\r\n                            label=\"Password\"\r\n                            value={register?.password}\r\n                            variant=\"outlined\"\r\n                            type=\"text\"\r\n                            className={style.register_input_field}\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n                          />\r\n                        </div>\r\n                      <div className={style.forgotTextContainer}>  <h4  onClick={()=>settabSelected(\"forgot\")} className={style.forgotText}>Forgot Password ?</h4></div> \r\n                        <div className={style.loginbuttonDiv}><Button variant=\"contained\" onClick={()=>handleLoginSubmit()}  style={{backgroundColor: \"#6364BF\"}}>Login</Button></div> \r\n              </div>:\r\n              <div className={style.inputContainer}>\r\n                        <div className={style.firstName_div}>\r\n                          <TextField\r\n                            type=\"text\"\r\n                            FormHelperTextProps={{\r\n                              style: {\r\n                                backgroundColor: \"#fff\",\r\n                                margin: \"0px 0px\",\r\n                                paddingTop: \"4px\",\r\n                              },\r\n                            }}\r\n                            className={style.register_input_field}\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            name=\"email\"\r\n                            onChange={(e) => {\r\n                              setforgetmailError(\"\")\r\n                              setforgetmail(e.target.value)}}\r\n                            id=\"outlined-basic\"\r\n                            label=\"Email\"\r\n                            value={forgetmail}\r\n                            variant=\"outlined\"\r\n                            error={forgetmailError}\r\n                            helperText={forgetmailError}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className={style.loginbuttonDiv}>\r\n                          <Button variant=\"contained\" onClick={()=>{\r\n                         \r\n                          ForgetPassword()}}  style={{backgroundColor: \"#6364BF\",marginTop:\"52px\",marginBottom:\"30px\"}}>Submit</Button></div> \r\n              </div>}\r\n               <OtpModal setOpen={setOpen} open={open} handleButtonClick={OtpVerify} setotpValue={setOtpValue} otpValue={otpValue}/>\r\n              </div>\r\n              {authReducer?.isLoading && <Loading/>}\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;\r\n"],"names":["className","emailValidation","email","test","String","toLowerCase","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","OtpModal","open","setOpen","handleButtonClick","setotpValue","otpValue","useState","Modal","onClose","Box","sx","styles","marginTop","value","onChange","numInputs","renderSeparator","inputType","renderInput","props","Button","variant","onClick","backgroundColor","navigation","dispatch","useDispatch","seterror","tabSelected","settabSelected","setOtpValue","authReducer","useSelector","state","forgetmail","setforgetmail","forgetmailError","setforgetmailError","name","mobile","password","confirmPassword","errorMsg","seterrorMsg","navigate","useNavigate","location","useLocation","purpose","product","cpassword","register","setregister","ResetRegisterStates","handleChange","firstName","lastName","Fragment","titleTemplate","description","LayoutOne","headerTop","TextField","error","FormHelperTextProps","margin","paddingTop","helperText","type","placeholder","required","e","target","id","label","pass","cpass","errors","trim","length","Object","keys","finalRegister","RegisterAction","handleSubmit","LoginAction","handleLoginSubmit","data","ForgetPasswordAction","ForgetPassword","marginBottom","OtpVerifyAction","isLoading","Loading"],"sourceRoot":""}