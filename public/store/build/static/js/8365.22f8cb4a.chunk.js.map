{"version":3,"file":"static/js/8365.22f8cb4a.chunk.js","mappings":"iPA4GA,UAjG0B,SAAH,GAAc,EAARA,SAAgB,IAC3C,GAA4BC,EAAAA,EAAAA,UAAS,mBAAkB,eAAhDC,EAAM,KAAEC,EAAS,KACxB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,KAC5B,GAAkCJ,EAAAA,EAAAA,UAAS,IAAG,eAAvCK,EAAS,KAAEC,EAAY,KAC9B,GAA4CN,EAAAA,EAAAA,UAAS,IAAG,eAAjDO,EAAc,KAAEC,EAAiB,KACxC,GAA8CR,EAAAA,EAAAA,UAAS,IAAG,eAAnDS,EAAe,KAAEC,EAAkB,KAC1C,GAA4BV,EAAAA,EAAAA,UAAS,GAAE,eAAhCW,EAAM,KAAEC,EAAS,KACxB,GAAsCZ,EAAAA,EAAAA,UAAS,GAAE,eAA1Ca,EAAW,KAAEC,EAAc,KAClC,GAAsCd,EAAAA,EAAAA,UAAS,IAAG,eAA3Ce,EAAW,KAAEC,EAAc,KAClC,GAA4ChB,EAAAA,EAAAA,UAAS,IAAG,eAAjDiB,EAAc,KAAEC,EAAiB,KAChCC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,OAAO,IAAjDH,SAGFI,GAAaC,EAAAA,EAAAA,MAAbD,SA4BN,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAIR,GAAiBS,EAAAA,EAAAA,IAAkBP,EAAUhB,EAAUE,GACrDsB,GAAuBD,EAAAA,EAAAA,IAC3BT,EACAV,EACAE,GAGFS,EADAD,EAAiBU,GAEjBX,EAAeC,EAAeW,MAAMjB,EAAQA,EA1B5B,IA2BlB,GAAG,CAACA,EAAQQ,EAAUhB,EAAUE,EAAWE,EAAgBE,KAGzD,UAAC,EAAAoB,SAAQ,YACP,SAAC,IAAG,CACFC,cAAc,YACdC,YAAY,6DAGd,UAAC,IAAS,CAACC,UAAU,UAAS,WAE5B,SAAC,IAAU,CACTC,MAAO,CACL,CAACC,MAAO,OAAQC,KAAMC,iBACtB,CAACF,MAAO,OAAQC,KAAMC,eAAyBb,OAInD,gBAAKc,UAAU,yBAAwB,UACrC,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,MAAK,UAClB,iBAAKA,UAAU,YAAW,WAExB,SAAC,IAAgB,CACfC,UAhDE,SAAArC,GAChBC,EAAUD,EACZ,EA+CgBsC,oBAxCY,SAACpC,EAAUE,GACrCG,EAAkBL,GAClBO,EAAmBL,EACrB,EAsCgBmC,aAAcrB,EAASsB,OACvBC,mBAAoB3B,EAAY0B,OAChCtB,SAAUA,EACVwB,cAjDM,SAACxC,EAAUE,GAC/BD,EAAYD,GACZG,EAAaD,EACf,KAkDc,SAAC,IAAY,CAACJ,OAAQA,EAAQkB,SAAUJ,KAGxC,gBAAKsB,UAAU,yCAAwC,UACrD,SAAC,IAAS,CACRO,aAAc3B,EAAewB,OAC7BI,UAlEA,GAmEAC,eAAgB,EAChBlC,UAAWA,EACXC,YAAaA,EACbC,eAAgBA,EAChBiC,mBAAmB,YACnBC,aAAa,OACbC,aAAa,yBAUjC,C","sources":["pages/shop/ShopListTwoColumn.js"],"sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\r\nimport Paginator from \"react-hooks-paginator\"; \r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getSortedProducts } from \"../../helpers/product\";\r\nimport SEO from \"../../components/seo\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport ShopTopbarFilter from \"../../wrappers/product/ShopTopbarFilter\";\r\nimport ShopProducts from \"../../wrappers/product/ShopProducts\";\r\n\r\nconst ShopListTwoColumn = ({ location }) => {\r\n  const [layout, setLayout] = useState(\"list two-column\");\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const [filterSortType, setFilterSortType] = useState(\"\");\r\n  const [filterSortValue, setFilterSortValue] = useState(\"\");\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentData, setCurrentData] = useState([]);\r\n  const [sortedProducts, setSortedProducts] = useState([]);\r\n  const { products } = useSelector((state) => state.product);\r\n\r\n  const pageLimit = 16;\r\n  let { pathname } = useLocation();\r\n\r\n  const getLayout = layout => {\r\n    setLayout(layout);\r\n  };\r\n\r\n  const getSortParams = (sortType, sortValue) => {\r\n    setSortType(sortType);\r\n    setSortValue(sortValue);\r\n  };\r\n\r\n  const getFilterSortParams = (sortType, sortValue) => {\r\n    setFilterSortType(sortType);\r\n    setFilterSortValue(sortValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = getSortedProducts(products, sortType, sortValue);\r\n    const filterSortedProducts = getSortedProducts(\r\n      sortedProducts,\r\n      filterSortType,\r\n      filterSortValue\r\n    );\r\n    sortedProducts = filterSortedProducts;\r\n    setSortedProducts(sortedProducts);\r\n    setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\r\n  }, [offset, products, sortType, sortValue, filterSortType, filterSortValue]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SEO\r\n        titleTemplate=\"Shop Page\"\r\n        description=\"Shop page of flone react minimalist eCommerce template.\"\r\n      />\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb \r\n          pages={[\r\n            {label: \"Home\", path: process.env.PUBLIC_URL + \"/\" },\r\n            {label: \"Shop\", path: process.env.PUBLIC_URL + pathname }\r\n          ]} \r\n        />\r\n\r\n        <div className=\"shop-area pt-95 pb-100\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                {/* shop topbar filter */}\r\n                <ShopTopbarFilter\r\n                  getLayout={getLayout}\r\n                  getFilterSortParams={getFilterSortParams}\r\n                  productCount={products.length}\r\n                  sortedProductCount={currentData.length}\r\n                  products={products}\r\n                  getSortParams={getSortParams}\r\n                />\r\n\r\n                {/* shop page content default */}\r\n                <ShopProducts layout={layout} products={currentData} />\r\n\r\n                {/* shop product pagination */}\r\n                <div className=\"pro-pagination-style text-center mt-30\">\r\n                  <Paginator\r\n                    totalRecords={sortedProducts.length}\r\n                    pageLimit={pageLimit}\r\n                    pageNeighbours={2}\r\n                    setOffset={setOffset}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageContainerClass=\"mb-0 mt-0\"\r\n                    pagePrevText=\"«\"\r\n                    pageNextText=\"»\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShopListTwoColumn;\r\n"],"names":["location","useState","layout","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","products","useSelector","state","product","pathname","useLocation","useEffect","getSortedProducts","filterSortedProducts","slice","Fragment","titleTemplate","description","headerTop","pages","label","path","process","className","getLayout","getFilterSortParams","productCount","length","sortedProductCount","getSortParams","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"sourceRoot":""}