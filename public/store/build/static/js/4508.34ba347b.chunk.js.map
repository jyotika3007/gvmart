{"version":3,"file":"static/js/4508.34ba347b.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js"],"sourcesContent":["import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}"],"names":["useCallbackRef","useState","value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","apply","arguments","useMounted","mounted","isMounted","usePrevious","dataAttr","property","dataProp","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","contains","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","fadeStyles","ENTERING","ENTERED","Fade","React","className","children","transitionClasses","props","handleEnter","isAppearing","triggerBrowserReflow","onEnter","_jsx","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classNames","defaultProps","in","timeout","mountOnEnter","unmountOnExit","appear","displayName","size","scrollbarSize","recalc","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","onUnmount","valueRef","useUpdatedRef","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","resolveContainerRef","getBoundingClientRect","manager","_excluded","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","_ref","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","tabIndex","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","Manager","_superPropBase","object","hasOwnProperty","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","propTypes","PropTypes","variant","CloseButton","type","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","ModalHeader","DivStyledAsH4","p","Component","animation","dialogAs","DialogTransition","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","rHyphen","pascalCase","str","toUpperCase","string","_","chr","prefix","BsComponent","as","Tag","resolvedPrefix"],"sourceRoot":""}